{
  "id": "test-mani",
  "manifest_content": "version: '2'\n\nservices:\n  spark-master:\n    image: elastest/ebs-spark-base:0.5.0\n    container_name: spark-master\n    ports:\n      - \"8080:8080\"\n    volumes:\n      - ./spark/alluxio_conf:/opt/alluxio/conf\n      - ./spark/spark_conf:/opt/spark/conf\n      - ./spark/hadoop_conf:/usr/local/hadoop/etc/hadoop\n    command: [\"/usr/bin/supervisord\", \"--configuration=/opt/conf/master.conf\"]\n    hostname: spark-master\n    networks:\n      - elastest\n\n  spark-worker:\n    image: elastest/ebs-spark-base:0.5.0\n    depends_on:\n      - spark-master\n    ports:\n      - \"8081\"\n    volumes:\n      - ./spark/alluxio_conf:/opt/alluxio/conf\n      - ./spark/spark_conf:/opt/spark/conf\n      - ./spark/hadoop_conf:/usr/local/hadoop/etc/hadoop\n    command: [\"/usr/bin/supervisord\", \"--configuration=/opt/conf/slave.conf\"]\n    hostname: spark-worker\n    networks:\n      - elastest\n\nnetworks:\n  elastest:\n    external: true\n",
  "manifest_type": "dummy",
  "plan_id": "testplan",
  "service_id": "test-svc",
  "endpoints": {  // dict length must be > 0
    "sub_service_name_1": {  // required. name of the sub-service component
      "description": "this is a sub-service that does stuff",  // optional.
      "main": true,  // required. whether or not this is the main front-end to the service
      "api": {
          [  // array is optional, allows for more than 1 endpoint exposed from one service
            {
              "protocol": "http",  // required
              "port": 9000,  // required
              "path": "/v2",  // required
              "definition": {  // required
                "type": "openapi",  // required
                "path": "/v2/api.yaml",  // required
                "port": 9090  // optional, assumes port in api definition otherwise
              },
              "health_path": "/eus/v1/application/health"
            }
        ]
      },
      "gui": {
        "protocol": "http",  // required
        "port": 9089,  // required
        "path": "/gui"  // required
      }
    },
    "sub_service_name_2": {  // required. name of the sub-service component
      "description": "this is a sub-service that does stuff even better than the other",  // optional.
      "main": true,  // required. whether or not this is the main front-end to the service
      "api": {
        "protocol": "http",  // required
        "port": 9001,  // required
        "path": "/v3",  // required
        "definition": {  // required
          "type": "openapi",  // required
          "path": "/v3/api.yaml",  // required
          "port": 9091  // optional, assumes port in api definition otherwise
        }
      },
      "gui": {
        "protocol": "http",  // required
        "port": 9090,  // required
        "path": "/gui"  // required
      }
    }
  }
}
