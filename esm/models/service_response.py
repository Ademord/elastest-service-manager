# coding: utf-8

from __future__ import absolute_import
from .base_model_ import Model
from datetime import date, datetime
from typing import List, Dict
from ..util import deserialize_model


class ServiceResponse(Model):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self, dashboard_url: str=None, operation: str=None):
        """
        ServiceResponse - a model defined in Swagger

        :param dashboard_url: The dashboard_url of this ServiceResponse.
        :type dashboard_url: str
        :param operation: The operation of this ServiceResponse.
        :type operation: str
        """
        self.swagger_types = {
            'dashboard_url': str,
            'operation': str
        }

        self.attribute_map = {
            'dashboard_url': 'dashboard_url',
            'operation': 'operation'
        }

        self._dashboard_url = dashboard_url
        self._operation = operation

    @classmethod
    def from_dict(cls, dikt) -> 'ServiceResponse':
        """
        Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ServiceResponse of this ServiceResponse.
        :rtype: ServiceResponse
        """
        return deserialize_model(dikt, cls)

    @property
    def dashboard_url(self) -> str:
        """
        Gets the dashboard_url of this ServiceResponse.
        The URL of a web-based management user interface for the service instance; we refer to this as a service dashboard. The URL MUST contain enough information for the dashboard to identify the resource being accessed (9189kdfsk0vfnku in the example below). Note: a broker that wishes to return dashboard_url for a service instance MUST return it with the initial response to the provision request, even if the service is provisioned asynchronously. If present, MUST be a non-empty string. 

        :return: The dashboard_url of this ServiceResponse.
        :rtype: str
        """
        return self._dashboard_url

    @dashboard_url.setter
    def dashboard_url(self, dashboard_url: str):
        """
        Sets the dashboard_url of this ServiceResponse.
        The URL of a web-based management user interface for the service instance; we refer to this as a service dashboard. The URL MUST contain enough information for the dashboard to identify the resource being accessed (9189kdfsk0vfnku in the example below). Note: a broker that wishes to return dashboard_url for a service instance MUST return it with the initial response to the provision request, even if the service is provisioned asynchronously. If present, MUST be a non-empty string. 

        :param dashboard_url: The dashboard_url of this ServiceResponse.
        :type dashboard_url: str
        """
        if dashboard_url is None:
            raise ValueError("Invalid value for `dashboard_url`, must not be `None`")

        self._dashboard_url = dashboard_url

    @property
    def operation(self) -> str:
        """
        Gets the operation of this ServiceResponse.
        For asynchronous responses, service brokers MAY return an identifier representing the operation. The value of this field MUST be provided by the platform with requests to the Last Operation endpoint in a URL encoded query parameter. If present, MUST be a non-empty string. 

        :return: The operation of this ServiceResponse.
        :rtype: str
        """
        return self._operation

    @operation.setter
    def operation(self, operation: str):
        """
        Sets the operation of this ServiceResponse.
        For asynchronous responses, service brokers MAY return an identifier representing the operation. The value of this field MUST be provided by the platform with requests to the Last Operation endpoint in a URL encoded query parameter. If present, MUST be a non-empty string. 

        :param operation: The operation of this ServiceResponse.
        :type operation: str
        """

        self._operation = operation

