# coding: utf-8

from __future__ import absolute_import
#
from esm.models.last_operation import LastOperation
from esm.models.service_type import ServiceType
from .base_model_ import Model
from datetime import date, datetime
from typing import List, Dict
from ..util import deserialize_model


class ServiceInstance(Model):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self, service_type: ServiceType=None, state: LastOperation=None, context: object=None):
        """
        ServiceInstance - a model defined in Swagger

        :param service_type: The service_type of this ServiceInstance.
        :type service_type: ServiceType
        :param state: The state of this ServiceInstance.
        :type state: LastOperation
        :param context: The context of this ServiceInstance.
        :type context: object
        """
        self.swagger_types = {
            'service_type': ServiceType,
            'state': LastOperation,
            'context': object
        }

        self.attribute_map = {
            'service_type': 'service_type',
            'state': 'state',
            'context': 'context'
        }

        self._service_type = service_type
        self._state = state
        self._context = context

    @classmethod
    def from_dict(cls, dikt) -> 'ServiceInstance':
        """
        Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ServiceInstance of this ServiceInstance.
        :rtype: ServiceInstance
        """
        return deserialize_model(dikt, cls)

    @property
    def service_type(self) -> ServiceType:
        """
        Gets the service_type of this ServiceInstance.
        the type of the service

        :return: The service_type of this ServiceInstance.
        :rtype: ServiceType
        """
        return self._service_type

    @service_type.setter
    def service_type(self, service_type: ServiceType):
        """
        Sets the service_type of this ServiceInstance.
        the type of the service

        :param service_type: The service_type of this ServiceInstance.
        :type service_type: ServiceType
        """

        self._service_type = service_type

    @property
    def state(self) -> LastOperation:
        """
        Gets the state of this ServiceInstance.
        the current state of the instance

        :return: The state of this ServiceInstance.
        :rtype: LastOperation
        """
        return self._state

    @state.setter
    def state(self, state: LastOperation):
        """
        Sets the state of this ServiceInstance.
        the current state of the instance

        :param state: The state of this ServiceInstance.
        :type state: LastOperation
        """

        self._state = state

    @property
    def context(self) -> object:
        """
        Gets the context of this ServiceInstance.
        additional parameters of the service

        :return: The context of this ServiceInstance.
        :rtype: object
        """
        return self._context

    @context.setter
    def context(self, context: object):
        """
        Sets the context of this ServiceInstance.
        additional parameters of the service

        :param context: The context of this ServiceInstance.
        :type context: object
        """

        self._context = context

