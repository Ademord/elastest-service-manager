# coding: utf-8

from __future__ import absolute_import
from esm.models.catalog_service import CatalogService
from .base_model_ import Model
from datetime import date, datetime
from typing import List, Dict
from ..util import deserialize_model


class CatalogServices(Model):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self, services: List[CatalogService]=None):
        """
        CatalogServices - a model defined in Swagger

        :param services: The services of this CatalogServices.
        :type services: List[CatalogService]
        """
        self.swagger_types = {
            'services': List[CatalogService]
        }

        self.attribute_map = {
            'services': 'services'
        }

        self._services = services

    @classmethod
    def from_dict(cls, dikt) -> 'CatalogServices':
        """
        Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The CatalogServices of this CatalogServices.
        :rtype: CatalogServices
        """
        return deserialize_model(dikt, cls)

    @property
    def services(self) -> List[CatalogService]:
        """
        Gets the services of this CatalogServices.

        :return: The services of this CatalogServices.
        :rtype: List[CatalogService]
        """
        return self._services

    @services.setter
    def services(self, services: List[CatalogService]):
        """
        Sets the services of this CatalogServices.

        :param services: The services of this CatalogServices.
        :type services: List[CatalogService]
        """

        self._services = services

