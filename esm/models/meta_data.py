# coding: utf-8

from __future__ import absolute_import
from esm.models.listing import Listing
from esm.models.provider import Provider
from .base_model_ import Model
from datetime import date, datetime
from typing import List, Dict
from ..util import deserialize_model


class MetaData(Model):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self, display_name: str=None, listing: Listing=None, provider: Provider=None):
        """
        MetaData - a model defined in Swagger

        :param display_name: The display_name of this MetaData.
        :type display_name: str
        :param listing: The listing of this MetaData.
        :type listing: Listing
        :param provider: The provider of this MetaData.
        :type provider: Provider
        """
        self.swagger_types = {
            'display_name': str,
            'listing': Listing,
            'provider': Provider
        }

        self.attribute_map = {
            'display_name': 'displayName',
            'listing': 'listing',
            'provider': 'provider'
        }

        self._display_name = display_name
        self._listing = listing
        self._provider = provider

    @classmethod
    def from_dict(cls, dikt) -> 'MetaData':
        """
        Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Meta_data of this MetaData.
        :rtype: MetaData
        """
        return deserialize_model(dikt, cls)

    @property
    def display_name(self) -> str:
        """
        Gets the display_name of this MetaData.
        displayName of the service.

        :return: The display_name of this MetaData.
        :rtype: str
        """
        return self._display_name

    @display_name.setter
    def display_name(self, display_name: str):
        """
        Sets the display_name of this MetaData.
        displayName of the service.

        :param display_name: The display_name of this MetaData.
        :type display_name: str
        """

        self._display_name = display_name

    @property
    def listing(self) -> Listing:
        """
        Gets the listing of this MetaData.

        :return: The listing of this MetaData.
        :rtype: Listing
        """
        return self._listing

    @listing.setter
    def listing(self, listing: Listing):
        """
        Sets the listing of this MetaData.

        :param listing: The listing of this MetaData.
        :type listing: Listing
        """

        self._listing = listing

    @property
    def provider(self) -> Provider:
        """
        Gets the provider of this MetaData.

        :return: The provider of this MetaData.
        :rtype: Provider
        """
        return self._provider

    @provider.setter
    def provider(self, provider: Provider):
        """
        Sets the provider of this MetaData.

        :param provider: The provider of this MetaData.
        :type provider: Provider
        """

        self._provider = provider

